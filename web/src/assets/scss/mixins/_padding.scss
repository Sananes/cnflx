/**
 * Padding
 */
$modifier: 2;

@mixin padding-top($number) {
    padding-top: #{$number * ($typographic-leading / $modifier) + "px"};

    @include breakpoint-md {
        padding-top: #{$number * $typographic-leading + "px"};
    }
}

@mixin padding-bottom($number) {
    padding-bottom: #{$number * ($typographic-leading / $modifier) + "px"};

    @include breakpoint-md {
        padding-bottom: #{ $number * $typographic-leading + "px"};
    }
}

@mixin padding($top, $right, $bottom:null, $left:null) {
    @if $left==null and $bottom==null {
        padding: #{ $top * ($typographic-leading / $modifier) + "px"} #{ $right * $typographic-leading + "px"};

        @include breakpoint-md {
            padding: #{ $top * ($typographic-leading / $modifier) + "px"} #{ $right * $typographic-leading + "px"};
        }
    }
    @else if $left==null or $left==$right {
        padding: #{ $top * ($typographic-leading / $modifier) + "px"} #{ $right * ($typographic-leading / $modifier) + "px"} #{ $bottom * ($typographic-leading / $modifier) + "px"};

        @include breakpoint-md {
            padding: #{ $top * $typographic-leading + "px"} #{ $right * $typographic-leading + "px"} #{ $bottom * $typographic-leading + "px"};

        }
    }
    @else {
        padding: #{ $top * ($typographic-leading / $modifier) + "px"} #{ $right * ($typographic-leading / $modifier) + "px"} #{ $bottom * ($typographic-leading / $modifier) + "px"} #{ $left * ($typographic-leading / $modifier) + "px"};

        @include breakpoint-md {
            padding: #{ $top * $typographic-leading + "px"} #{ $right * $typographic-leading + "px"} #{ $bottom * $typographic-leading + "px"} #{ $left * $typographic-leading + "px"};
        }
    }
}

@mixin padding-equal($number) {
    padding: #{ $number * $typographic-leading + "px"};
}
